{
  "_args": [
    [
      "@expo/spawn-async@^1.2.8",
      "/media/garvit/Windows/Users/Garvit/Desktop/currency-converter-starter/node_modules/xdl"
    ]
  ],
  "_from": "@expo/spawn-async@>=1.2.8 <2.0.0",
  "_hasShrinkwrap": false,
  "_id": "@expo/spawn-async@1.4.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/@expo/spawn-async",
  "_nodeVersion": "8.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/spawn-async_1.4.0_1542773684174_0.14897261836015718"
  },
  "_npmUser": {
    "email": "ide+npm@jameside.com",
    "name": "ide"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "name": "@expo/spawn-async",
    "raw": "@expo/spawn-async@^1.2.8",
    "rawSpec": "^1.2.8",
    "scope": "@expo",
    "spec": ">=1.2.8 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@expo/osascript",
    "/xdl"
  ],
  "_resolved": "https://registry.npmjs.org/@expo/spawn-async/-/spawn-async-1.4.0.tgz",
  "_shasum": "39f7777bdee22e1f48d03898c9ed2f150a7f4cbd",
  "_shrinkwrap": null,
  "_spec": "@expo/spawn-async@^1.2.8",
  "_where": "/media/garvit/Windows/Users/Garvit/Desktop/currency-converter-starter/node_modules/xdl",
  "author": {
    "name": "Expo"
  },
  "bugs": {
    "url": "https://github.com/expo/spawn-async/issues"
  },
  "dependencies": {
    "@types/cross-spawn": "^6.0.0",
    "cross-spawn": "^6.0.5"
  },
  "description": "A Promise-based interface into processes created by child_process.spawn",
  "devDependencies": {
    "@types/jest": "^23.3.9",
    "jest": "^23.6.0",
    "ts-jest": "^23.10.4",
    "typescript": "^3.1.6"
  },
  "directories": {},
  "dist": {
    "fileCount": 9,
    "integrity": "sha512-jE9zSZ14eOfKxXs+WJZofweKtsAeuQiOpntsb+zp8Ti9/wk+9ZjKkffdld7UfANr8asmzuJYnEoVyL+hMy3SWw==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb9Nu0CRA9TVsSAnZWagAAXuUP/iozTUi+0EmAOJj2UgSV\njZNqlFgZCZjHceE3+mFIbL7ILusQ+oJ/Mfgqp2qasl1bfHJz7/QxWBUs9S75\nBoVvPpxy0NQIZFwee/3uNR9qDuhgjp+N8c27/DZRntnJp1vQNBrGPYXO3GFN\n15z/tcRP0/JHjLonC00nHT4m4GFP1DselvedTde0RDnHrI1zrFruOJ2qSD4i\nMgraFiQ6CqjW07BYjcfCOS2Y58tECeuc0mN8X+qVYWacaWD6brvz0pXtzHf0\nr68e7ibmBHjz5d6Gn4ZTxFnDjkaP9Cwu4YWBbnoPEBKQEzpVGsNM9vZM4Qx0\nj7+lqT97UG0//HSy6cgiL0z08W9imbQLxlWuDf7WPTPpxnlyoppeXS4SeByx\nfrhJA2rN13g7E1gDNVtf2SI2RsNxiRYyPPXQK9OeQIyHxSYkIADhM8iJ3+Jq\n1V/DQk3KBTz+gr35netvGwI8yR83HzXS88asRaU05155XJtmNsM/dbn84rMg\nqL79fVhGQs8IYGlagSSK1OoRHQfjGtBDPoCqRK6YpNPll7iZrXuK3jFfllUu\n/7RDodZ3fDtFA0Z7toResrLcyKgESpD4huItjk3nnqszBk+pCMksotB4bYLw\nPh2WTTxPwSQ6fx3CCTcCcwfptC/z3ITkfXQEPS0Ztb6h5GG+uEaO3kQD+Lj0\n2XXL\r\n=BIQ4\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "39f7777bdee22e1f48d03898c9ed2f150a7f4cbd",
    "tarball": "https://registry.npmjs.org/@expo/spawn-async/-/spawn-async-1.4.0.tgz",
    "unpackedSize": 21318
  },
  "engines": {
    "node": ">=4"
  },
  "gitHead": "a312b1edb4beb75016cc42c1cea5cfd7c1fb2c93",
  "homepage": "https://github.com/expo/spawn-async#readme",
  "jest": {
    "preset": "ts-jest",
    "rootDir": "src",
    "testEnvironment": "node"
  },
  "keywords": [
    "async",
    "child_process",
    "process",
    "promise",
    "spawn"
  ],
  "license": "MIT",
  "main": "build/spawnAsync.js",
  "maintainers": [
    {
      "name": "ide",
      "email": "ide+npm@jameside.com"
    },
    {
      "name": "brentvatne",
      "email": "brentvatne@gmail.com"
    },
    {
      "name": "dsokal",
      "email": "dominiksokal@gmail.com"
    },
    {
      "name": "esamelson",
      "email": "eric@expo.io"
    },
    {
      "name": "evanbacon",
      "email": "baconbrix@gmail.com"
    },
    {
      "name": "expoadmin",
      "email": "support@expo.io"
    },
    {
      "name": "fson",
      "email": "ville.immonen@iki.fi"
    },
    {
      "name": "ccheever",
      "email": "ccheever@gmail.com"
    },
    {
      "name": "jakubste",
      "email": "jakub.ste@gmail.com"
    },
    {
      "name": "jesseruder",
      "email": "jesseruder@gmail.com"
    },
    {
      "name": "nikki93",
      "email": "s.nikhilesh@gmail.com"
    },
    {
      "name": "quinlanj",
      "email": "quinlanjung@gmail.com"
    },
    {
      "name": "sjchmiela",
      "email": "sjchmiela@gmail.com"
    },
    {
      "name": "terribleben",
      "email": "ben@exp.host"
    },
    {
      "name": "tsapeta",
      "email": "sapeta.tomasz@gmail.com"
    }
  ],
  "name": "@expo/spawn-async",
  "optionalDependencies": {},
  "readme": "# spawn-async [![CircleCI](https://circleci.com/gh/expo/spawn-async.svg?style=svg)](https://circleci.com/gh/expo/spawn-async) [![Build Status](https://travis-ci.org/expo/spawn-async.svg?branch=master)](https://travis-ci.org/expo/spawn-async)\n\nA cross-platform version of Node's `child_process.spawn` as an async function that returns a promise.\n\n## Usage:\n```js\nimport spawnAsync from '@expo/spawn-async';\n\n(async function () {\n    let resultPromise = spawnAsync('echo', ['hello', 'world']);\n    let spawnedChildProcess = resultPromise.child;\n    try {\n      let {\n        pid,\n        output: [stdout, stderr],\n        stdout,\n        stderr,\n        status,\n        signal,\n      } = await resultPromise;\n    } catch (e) {\n       console.error(e.stack);\n      // The error object also has the same properties as the result object\n    }\n})();\n```\n\n## API\n\n`spawnAsync` takes the same arguments as [`child_process.spawn`](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options).\n\nIt returns a promise whose result is an object with these properties:\n\n- `pid`: the process ID of the spawned child process\n- `output`: an array with stdout and stderr's output\n- `stdout`: a string of what the child process wrote to stdout\n- `stderr`: a string of what the child process wrote to stderr\n- `status`: the exit code of the child process\n- `signal`: the signal (ex: `SIGTERM`) used to stop the child process if it did not exit on its own\n\nIf there's an error running the child process or it exits with a non-zero status code, `spawnAsync` rejects the returned promise. The Error object also has the properties listed above.\n\n### Accessing the child process\n\nSometimes you may want to access the child process object--for example, if you wanted to attach event handlers to `stdio` or `stderr` and process data as it is available instead of waiting for the process to be resolved.\n\nYou can do this by accessing `.child` on the Promise that is returned by `spawnAsync`.\n\nHere is an example:\n```js\n(async () => {\n    let ffmpeg$ = spawnAsync('ffmpeg', ['-i', 'path/to/source.flac', '-codec:a', 'libmp3lame', '-b:a', '320k', '-ar', '44100', 'path/to/output.mp3']);\n    let childProcess = ffmpeg$.child;\n    childProcess.stdout.on('data', (data) => {\n      console.log(`ffmpeg stdout: ${data}`);\n    });\n    childProcess.stderr.on('data', (data) => {\n      console.error(`ffmpeg stderr: ${data}`);\n    });\n    let result = await ffmpeg$;\n    console.log(`ffmpeg pid ${result.pid} exited with code ${result.code}`);\n})();\n\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/expo/spawn-async.git"
  },
  "scripts": {
    "build": "tsc",
    "clean": "rm -rf build",
    "prepare": "yarn clean && yarn build",
    "test": "jest"
  },
  "version": "1.4.0"
}
