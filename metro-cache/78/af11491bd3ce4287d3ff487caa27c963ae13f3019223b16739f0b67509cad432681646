{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"object-resolve-path","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _objectResolvePath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"object-resolve-path\"));\n\n  var PREFIX = '$';\n  var _default = {\n    isVar: isVar,\n    calc: calc,\n    extract: extract,\n    get: get\n  };\n  exports.default = _default;\n\n  function isVar(str) {\n    return typeof str === 'string' && str.charAt(0) === PREFIX;\n  }\n\n  function calc(str, varsArr) {\n    var realValue = get(str, varsArr);\n\n    if (realValue === undefined) {\n      throw new Error(\"Unresolved variable: \" + str);\n    }\n\n    return realValue;\n  }\n\n  function extract(obj) {\n    return Object.keys(obj).reduce(function (res, key) {\n      if (isVar(key)) {\n        res = res || {};\n        res[key] = obj[key];\n      }\n\n      return res;\n    }, null);\n  }\n\n  function get(name, varsArr) {\n    if (!Array.isArray(varsArr)) {\n      throw new Error('You should pass vars array to vars.get()');\n    }\n\n    var rootVar = name.match(/[^.[]*/)[0];\n    var isSimpleVar = rootVar === name;\n\n    for (var i = 0; i < varsArr.length; i++) {\n      var vars = varsArr[i];\n\n      if (!vars || vars[rootVar] === undefined) {\n        continue;\n      }\n\n      if (isSimpleVar) {\n        return vars[name];\n      }\n\n      try {\n        return (0, _objectResolvePath.default)((0, _defineProperty2.default)({}, rootVar, vars[rootVar]), name);\n      } catch (error) {\n        return undefined;\n      }\n    }\n  }\n});","map":[[11,0,5,0],[13,0,7,0],[13,6,7,6,"PREFIX"],[13,12,7,12],[13,15,7,15],[13,18,7,0],[14,17,9,15],[15,0,10,2,"isVar"],[15,4,10,2,"isVar"],[15,9,10,7],[15,11,10,2,"isVar"],[15,16,9,15],[16,0,11,2,"calc"],[16,4,11,2,"calc"],[16,8,11,6],[16,10,11,2,"calc"],[16,14,9,15],[17,0,12,2,"extract"],[17,4,12,2,"extract"],[17,11,12,9],[17,13,12,2,"extract"],[17,20,9,15],[18,0,13,2,"get"],[18,4,13,2,"get"],[18,7,13,5],[18,9,13,2,"get"],[19,0,9,15],[19,3],[22,0,20,0],[22,11,20,9,"isVar"],[22,16,20,0],[22,17,20,15,"str"],[22,20,20,0],[22,22,20,20],[23,0,21,2],[23,11,21,9],[23,18,21,16,"str"],[23,21,21,9],[23,26,21,24],[23,34,21,9],[23,38,21,36,"str"],[23,41,21,39],[23,42,21,40,"charAt"],[23,48,21,36],[23,49,21,47],[23,50,21,36],[23,56,21,54,"PREFIX"],[23,62,21,2],[24,0,22,1],[26,0,29,0],[26,11,29,9,"calc"],[26,15,29,0],[26,16,29,14,"str"],[26,19,29,0],[26,21,29,19,"varsArr"],[26,28,29,0],[26,30,29,28],[27,0,30,2],[27,8,30,6,"realValue"],[27,17,30,15],[27,20,30,18,"get"],[27,23,30,21],[27,24,30,22,"str"],[27,27,30,21],[27,29,30,27,"varsArr"],[27,36,30,21],[27,37,30,2],[29,0,31,2],[29,8,31,6,"realValue"],[29,17,31,15],[29,22,31,20,"undefined"],[29,31,31,2],[29,33,31,31],[30,0,32,4],[30,12,32,10],[30,16,32,14,"Error"],[30,21,32,10],[30,48,32,44,"str"],[30,51,32,10],[30,52,32,4],[31,0,33,3],[33,0,34,2],[33,11,34,9,"realValue"],[33,20,34,2],[34,0,35,1],[36,0,42,0],[36,11,42,9,"extract"],[36,18,42,0],[36,19,42,17,"obj"],[36,22,42,0],[36,24,42,22],[37,0,43,2],[37,11,43,9,"Object"],[37,17,43,15],[37,18,43,16,"keys"],[37,22,43,9],[37,23,43,21,"obj"],[37,26,43,9],[37,28,43,26,"reduce"],[37,34,43,9],[37,35,43,33],[37,45,43,34,"res"],[37,48,43,33],[37,50,43,39,"key"],[37,53,43,33],[37,55,43,47],[38,0,44,4],[38,10,44,8,"isVar"],[38,15,44,13],[38,16,44,14,"key"],[38,19,44,13],[38,20,44,4],[38,22,44,20],[39,0,45,6,"res"],[39,8,45,6,"res"],[39,11,45,9],[39,14,45,12,"res"],[39,17,45,15],[39,21,45,19],[39,23,45,6],[40,0,46,6,"res"],[40,8,46,6,"res"],[40,11,46,9],[40,12,46,10,"key"],[40,15,46,9],[40,16,46,6],[40,19,46,17,"obj"],[40,22,46,20],[40,23,46,21,"key"],[40,26,46,20],[40,27,46,6],[41,0,47,5],[43,0,48,4],[43,13,48,11,"res"],[43,16,48,4],[44,0,49,3],[44,5,43,9],[44,7,49,5],[44,11,43,9],[44,12,43,2],[45,0,50,1],[47,0,57,0],[47,11,57,9,"get"],[47,14,57,0],[47,15,57,13,"name"],[47,19,57,0],[47,21,57,19,"varsArr"],[47,28,57,0],[47,30,57,28],[48,0,58,2],[48,8,58,6],[48,9,58,7,"Array"],[48,14,58,12],[48,15,58,13,"isArray"],[48,22,58,7],[48,23,58,21,"varsArr"],[48,30,58,7],[48,31,58,2],[48,33,58,31],[49,0,59,4],[49,12,59,10],[49,16,59,14,"Error"],[49,21,59,10],[49,22,59,20],[49,64,59,10],[49,65,59,4],[50,0,60,3],[52,0,62,2],[52,8,62,8,"rootVar"],[52,15,62,15],[52,18,62,18,"name"],[52,22,62,22],[52,23,62,23,"match"],[52,28,62,18],[52,29,62,29],[52,37,62,18],[52,39,62,39],[52,40,62,18],[52,41,62,2],[53,0,63,2],[53,8,63,8,"isSimpleVar"],[53,19,63,19],[53,22,63,22,"rootVar"],[53,29,63,29],[53,34,63,34,"name"],[53,38,63,2],[55,0,66,2],[55,9,66,7],[55,13,66,11,"i"],[55,14,66,12],[55,17,66,15],[55,18,66,2],[55,20,66,18,"i"],[55,21,66,19],[55,24,66,22,"varsArr"],[55,31,66,29],[55,32,66,30,"length"],[55,38,66,2],[55,40,66,38,"i"],[55,41,66,39],[55,43,66,2],[55,45,66,43],[56,0,67,4],[56,10,67,8,"vars"],[56,14,67,12],[56,17,67,15,"varsArr"],[56,24,67,22],[56,25,67,23,"i"],[56,26,67,22],[56,27,67,4],[58,0,68,4],[58,10,68,8],[58,11,68,9,"vars"],[58,15,68,8],[58,19,68,17,"vars"],[58,23,68,21],[58,24,68,22,"rootVar"],[58,31,68,21],[58,32,68,17],[58,37,68,35,"undefined"],[58,46,68,4],[58,48,68,46],[59,0,69,6],[60,0,70,5],[62,0,71,4],[62,10,71,8,"isSimpleVar"],[62,21,71,4],[62,23,71,21],[63,0,72,6],[63,15,72,13,"vars"],[63,19,72,17],[63,20,72,18,"name"],[63,24,72,17],[63,25,72,6],[64,0,73,5],[66,0,74,4],[66,10,74,8],[67,0,75,6],[67,15,75,13],[67,81,75,27,"rootVar"],[67,88,75,13],[67,90,75,37,"vars"],[67,94,75,41],[67,95,75,42,"rootVar"],[67,102,75,41],[67,103,75,13],[67,106,75,53,"name"],[67,110,75,13],[67,111,75,6],[68,0,76,5],[68,7,74,4],[68,8,76,6],[68,15,76,13,"error"],[68,20,76,6],[68,22,76,20],[69,0,77,6],[69,15,77,13,"undefined"],[69,24,77,6],[70,0,78,5],[71,0,79,3],[72,0,80,1]]},"type":"js/module"}]}