{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"./replacers/vars","data":{"isAsync":false}},{"name":"./replacers/media-queries","data":{"isAsync":false}},{"name":"./value","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _vars = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./replacers/vars\"));\n\n  var _mediaQueries = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./replacers/media-queries\"));\n\n  var _value = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./value\"));\n\n  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./utils\"));\n\n  var _default = function () {\n    function _default(source) {\n      var varsArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      (0, _classCallCheck2.default)(this, _default);\n      this.source = source;\n      this.varsArr = varsArr;\n      this.processedSource = null;\n      this.extractedVars = null;\n      this.extractedProps = null;\n      this.calculatedVars = null;\n      this.calculatedProps = null;\n    }\n\n    (0, _createClass2.default)(_default, [{\n      key: \"calc\",\n      value: function calc() {\n        this.processSource();\n        this.calcVars();\n        this.calcProps();\n        this.tryOutline();\n        return {\n          calculatedVars: this.calculatedVars,\n          calculatedProps: this.calculatedProps\n        };\n      }\n    }, {\n      key: \"processSource\",\n      value: function processSource() {\n        this.processedSource = _mediaQueries.default.process(this.source);\n      }\n    }, {\n      key: \"calcVars\",\n      value: function calcVars() {\n        this.extractedVars = _vars.default.extract(this.processedSource);\n\n        if (this.extractedVars) {\n          var varsArrForVars = [this.extractedVars].concat(this.varsArr);\n          this.calculatedVars = calcPlainObject(this.extractedVars, varsArrForVars);\n          this.varsArr = [this.calculatedVars].concat(this.varsArr);\n        }\n      }\n    }, {\n      key: \"calcProps\",\n      value: function calcProps() {\n        this.extractedProps = _utils.default.excludeKeys(this.processedSource, this.extractedVars);\n        this.calculatedProps = calcPlainObject(this.extractedProps, this.varsArr);\n      }\n    }, {\n      key: \"tryOutline\",\n      value: function tryOutline() {\n        var outline = _vars.default.get('$outline', this.varsArr);\n\n        if (outline) {\n          this.calculatedProps.borderWidth = typeof outline === 'number' ? outline : 1;\n          this.calculatedProps.borderColor = getRandomColor();\n        }\n      }\n    }]);\n    return _default;\n  }();\n\n  exports.default = _default;\n\n  function calcPlainObject(obj, varsArr) {\n    return Object.keys(obj).reduce(function (res, prop) {\n      res[prop] = new _value.default(obj[prop], prop, varsArr).calc();\n      return res;\n    }, {});\n  }\n\n  function getRandomColor() {\n    var colors = ['black', 'red', 'green', 'blue'];\n    var index = Math.round(Math.random() * (colors.length - 1));\n    return colors[index];\n  }\n});","map":[[13,0,5,0],[15,0,6,0],[17,0,7,0],[19,0,8,0],[22,0,16,2],[22,22,16,14,"source"],[22,28,16,2],[22,30,16,36],[23,0,16,36],[23,10,16,22,"varsArr"],[23,17,16,36],[23,88,16,32],[23,90,16,36],[24,0,16,36],[25,0,17,4],[25,11,17,9,"source"],[25,17,17,4],[25,20,17,18,"source"],[25,26,17,4],[26,0,18,4],[26,11,18,9,"varsArr"],[26,18,18,4],[26,21,18,19,"varsArr"],[26,28,18,4],[27,0,19,4],[27,11,19,9,"processedSource"],[27,26,19,4],[27,29,19,27],[27,33,19,4],[28,0,20,4],[28,11,20,9,"extractedVars"],[28,24,20,4],[28,27,20,25],[28,31,20,4],[29,0,21,4],[29,11,21,9,"extractedProps"],[29,25,21,4],[29,28,21,26],[29,32,21,4],[30,0,22,4],[30,11,22,9,"calculatedVars"],[30,25,22,4],[30,28,22,26],[30,32,22,4],[31,0,23,4],[31,11,23,9,"calculatedProps"],[31,26,23,4],[31,29,23,27],[31,33,23,4],[32,0,24,3],[36,29,30,9],[37,0,31,4],[37,13,31,9,"processSource"],[37,26,31,4],[38,0,32,4],[38,13,32,9,"calcVars"],[38,21,32,4],[39,0,33,4],[39,13,33,9,"calcProps"],[39,22,33,4],[40,0,34,4],[40,13,34,9,"tryOutline"],[40,23,34,4],[41,0,35,4],[41,15,35,11],[42,0,36,6,"calculatedVars"],[42,10,36,6,"calculatedVars"],[42,24,36,20],[42,26,36,22],[42,31,36,27,"calculatedVars"],[42,45,35,11],[43,0,37,6,"calculatedProps"],[43,10,37,6,"calculatedProps"],[43,25,37,21],[43,27,37,23],[43,32,37,28,"calculatedProps"],[44,0,35,11],[44,9,35,4],[45,0,39,3],[48,38,41,18],[49,0,42,4],[49,13,42,9,"processedSource"],[49,28,42,4],[49,31,42,27,"mediaQueries"],[49,53,42,40,"process"],[49,60,42,27],[49,61,42,48],[49,66,42,53,"source"],[49,72,42,27],[49,73,42,4],[50,0,43,3],[53,33,45,13],[54,0,46,4],[54,13,46,9,"extractedVars"],[54,26,46,4],[54,29,46,25,"vars"],[54,43,46,30,"extract"],[54,50,46,25],[54,51,46,38],[54,56,46,43,"processedSource"],[54,71,46,25],[54,72,46,4],[56,0,47,4],[56,12,47,8],[56,17,47,13,"extractedVars"],[56,30,47,4],[56,32,47,28],[57,0,48,6],[57,14,48,12,"varsArrForVars"],[57,28,48,26],[57,31,48,29],[57,32,48,30],[57,37,48,35,"extractedVars"],[57,50,48,29],[57,52,48,50,"concat"],[57,58,48,29],[57,59,48,57],[57,64,48,62,"varsArr"],[57,71,48,29],[57,72,48,6],[58,0,49,6],[58,15,49,11,"calculatedVars"],[58,29,49,6],[58,32,49,28,"calcPlainObject"],[58,47,49,43],[58,48,49,44],[58,53,49,49,"extractedVars"],[58,66,49,43],[58,68,49,64,"varsArrForVars"],[58,82,49,43],[58,83,49,6],[59,0,50,6],[59,15,50,11,"varsArr"],[59,22,50,6],[59,25,50,21],[59,26,50,22],[59,31,50,27,"calculatedVars"],[59,45,50,21],[59,47,50,43,"concat"],[59,53,50,21],[59,54,50,50],[59,59,50,55,"varsArr"],[59,66,50,21],[59,67,50,6],[60,0,51,5],[61,0,52,3],[64,34,54,14],[65,0,55,4],[65,13,55,9,"extractedProps"],[65,27,55,4],[65,30,55,26,"utils"],[65,45,55,32,"excludeKeys"],[65,56,55,26],[65,57,55,44],[65,62,55,49,"processedSource"],[65,77,55,26],[65,79,55,66],[65,84,55,71,"extractedVars"],[65,97,55,26],[65,98,55,4],[66,0,56,4],[66,13,56,9,"calculatedProps"],[66,28,56,4],[66,31,56,27,"calcPlainObject"],[66,46,56,42],[66,47,56,43],[66,52,56,48,"extractedProps"],[66,66,56,42],[66,68,56,64],[66,73,56,69,"varsArr"],[66,80,56,42],[66,81,56,4],[67,0,57,3],[70,35,59,15],[71,0,60,4],[71,12,60,8,"outline"],[71,19,60,15],[71,22,60,18,"vars"],[71,36,60,23,"get"],[71,39,60,18],[71,40,60,27],[71,50,60,18],[71,52,60,39],[71,57,60,44,"varsArr"],[71,64,60,18],[71,65,60,4],[73,0,61,4],[73,12,61,8,"outline"],[73,19,61,4],[73,21,61,17],[74,0,62,6],[74,15,62,11,"calculatedProps"],[74,30,62,6],[74,31,62,27,"borderWidth"],[74,42,62,6],[74,45,62,41],[74,52,62,48,"outline"],[74,59,62,41],[74,64,62,60],[74,72,62,41],[74,75,62,71,"outline"],[74,82,62,41],[74,85,62,81],[74,86,62,6],[75,0,63,6],[75,15,63,11,"calculatedProps"],[75,30,63,6],[75,31,63,27,"borderColor"],[75,42,63,6],[75,45,63,41,"getRandomColor"],[75,59,63,55],[75,61,63,6],[76,0,64,5],[77,0,65,3],[84,0,76,0],[84,11,76,9,"calcPlainObject"],[84,26,76,0],[84,27,76,25,"obj"],[84,30,76,0],[84,32,76,30,"varsArr"],[84,39,76,0],[84,41,76,39],[85,0,77,2],[85,11,77,9,"Object"],[85,17,77,15],[85,18,77,16,"keys"],[85,22,77,9],[85,23,77,21,"obj"],[85,26,77,9],[85,28,77,26,"reduce"],[85,34,77,9],[85,35,77,33],[85,45,77,34,"res"],[85,48,77,33],[85,50,77,39,"prop"],[85,54,77,33],[85,56,77,48],[86,0,78,4,"res"],[86,6,78,4,"res"],[86,9,78,7],[86,10,78,8,"prop"],[86,14,78,7],[86,15,78,4],[86,18,78,16],[86,22,78,20,"Value"],[86,36,78,16],[86,37,78,26,"obj"],[86,40,78,29],[86,41,78,30,"prop"],[86,45,78,29],[86,46,78,16],[86,48,78,37,"prop"],[86,52,78,16],[86,54,78,43,"varsArr"],[86,61,78,16],[86,63,78,52,"calc"],[86,67,78,16],[86,69,78,4],[87,0,79,4],[87,13,79,11,"res"],[87,16,79,4],[88,0,80,3],[88,5,77,9],[88,7,80,5],[88,9,77,9],[88,10,77,2],[89,0,81,1],[91,0,87,0],[91,11,87,9,"getRandomColor"],[91,25,87,0],[91,28,87,26],[92,0,88,2],[92,8,88,6,"colors"],[92,14,88,12],[92,17,88,15],[92,18,89,4],[92,25,88,15],[92,27,90,4],[92,32,88,15],[92,34,91,4],[92,41,88,15],[92,43,92,4],[92,49,88,15],[92,50,88,2],[93,0,94,2],[93,8,94,6,"index"],[93,13,94,11],[93,16,94,14,"Math"],[93,20,94,18],[93,21,94,19,"round"],[93,26,94,14],[93,27,94,25,"Math"],[93,31,94,29],[93,32,94,30,"random"],[93,38,94,25],[93,44,94,42,"colors"],[93,50,94,48],[93,51,94,49,"length"],[93,57,94,42],[93,60,94,58],[93,61,94,25],[93,62,94,14],[93,63,94,2],[94,0,95,2],[94,11,95,9,"colors"],[94,17,95,15],[94,18,95,16,"index"],[94,23,95,15],[94,24,95,2],[95,0,96,1]]},"type":"js/module"}]}